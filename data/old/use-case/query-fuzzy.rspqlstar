# Query demonstrating the Farida use-case. The query detects an abnormal event

BASE <http://base/>
PREFIX ecare: <http://www.example.org/ecare#>
PREFIX sosa: <http://www.w3.org/ns/sosa/>
PREFIX rspu: <http://w3id.org/rsp/rspu#>

REGISTER STREAM <abnormal/farida> COMPUTED EVERY PT5S AS

SELECT (MAX(?degree) AS ?maxDegree)
FROM NAMED WINDOW <w1> ON <http://ecareathome/stream/activity> [RANGE PT5S STEP PT5S]
FROM NAMED WINDOW <w2> ON <http://ecareathome/stream/heartrate> [RANGE PT5S STEP PT5S]
FROM NAMED WINDOW <w3> ON <http://ecareathome/stream/breathing> [RANGE PT5S STEP PT5S]
FROM NAMED WINDOW <w4> ON <http://ecareathome/stream/oxygen> [RANGE PT5S STEP PT5S]
FROM NAMED WINDOW <w5> ON <http://ecareathome/stream/temperature> [RANGE PT5S STEP PT5S]
WHERE {
    [] a ecare:Context ;
       ecare:forPerson ?person ;
       ecare:forActivity ?activity ;
       ecare:expectedHeartRate        [ ecare:lowerBound ?hrLower ; ecare:upperBound ?hrUpper ] ;
       ecare:expectedBreathingRate    [ ecare:lowerBound ?brLower ; ecare:upperBound ?brUpper ] ;
       ecare:expectedOxygenSaturation [ ecare:lowerBound ?oxLower ; ecare:upperBound ?oxUpper ] ;
       ecare:expectedTemperature      [ ecare:lowerBound ?tempLower ; ecare:upperBound ?tempUpper ] ;

    WINDOW <w1> {
        GRAPH ?g1 {
            ?e1 a ecare:ActivityEvent ;
                sosa:observedProperty <person1/Activity> ;
                sosa:featureOfInterest ?person ;
                sosa:hasSimpleResult ?activity .
            << ?e1 a ecare:Activity >> rspu:hasState ?activityState .
        }
    }
    WINDOW <w1> {
        GRAPH ?g1 {
            ?e1 a ecare:ActivityEvent ;
                sosa:observedProperty <person1/Activity> ;
                sosa:featureOfInterest ?person ;
                sosa:hasSimpleResult ?activity .
        }
    }
    WINDOW <w2> {
        GRAPH ?g2 {
            ?e2 a ecare:HeartRateEvent ;
                sosa:observedProperty <person1/HeartRate> ;
                sosa:featureOfInterest ?person .
            << ?e2 a ecare:HighHeartRateEvent >> rspu:degreeOfTruth ?hrHighDegree .
            << ?e2 a ecare:VeryHighHeartRateEvent >> rspu:degreeOfTruth ?hrVeryHighDegree .
        }
    }
    FILTER(?hrHighDegree > 0 || ?hrVeryHighDegree > 0)

    WINDOW <w3> {
        GRAPH ?g3 {
            ?e3 a ecare:BreathingRateEvent ;
                sosa:observedProperty <person1/BreathingRate> ;
                sosa:featureOfInterest ?person .
            << ?e3 a ecare:ElevatedBreathingRateEvent >> rspu:degreeOfTruth ?brHighDegree .
        }
    }
    FILTER(?brHighDegree > 0)

    WINDOW <w4> {
        GRAPH ?g4 {
            ?e4 a ecare:OxygenSaturationEvent ;
                sosa:observedProperty <person1/OxygenSaturation> ;
                sosa:featureOfInterest ?person .
            << ?e4 a ecare:LowOxygenSaturationEvent >> rspu:degreeOfTruth ?oxLowDegree .
        }
    }
    FILTER(?oxLowDegree > 0)

    WINDOW <w5> {
        GRAPH ?g5 {
            ?e5 a ecare:TemperatureEvent ;
                sosa:observedProperty <person1/Temperature> ;
                sosa:featureOfInterest ?person .
            << ?e5 a ecare:Temperature >> rspu:hasState ?tempState.
            << ?e5 a ecare:HighTemperatureEvent >> rspu:degreeOfTruth ?tempHighDegree .
        }
    }
    FILTER(?tempHighDegree > 0)

    BIND(rspu:zadehConjunction(
            rspu:zadehConjunction(
                rspu:zadehConjunction(
                    rspu:zadehDisjunction(?hrHighDegree, ?hrVeryHighDegree),
                    ?brHighDegree
                ),
                ?oxLowDegree
            ),
            ?tempHighDegree
        ) AS ?degree)
}
HAVING(?maxDegree > 0)