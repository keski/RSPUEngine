# Query description:
# For all tunnel segments, generate a notification when the probability that the two oxygen sensors are reporting values
# that are reporting different values with some probability.

#
# Modes:
# - Lazy+cache: on/off
# - H5: on/off
#
# Parameters to vary:
# - Probability threshold of filters (0.49 , 0.4, 0.3, 0.2, ...)
#
# Data: 5% of all reported values are below threshold.
#

BASE <http://example.org/data/>
PREFIX sosa: <http://www.w3.org/ns/sosa/>
PREFIX rspu: <http://w3id.org/rsp/rspu#>
PREFIX : <http://example.org/ontology/>

REGISTER STREAM <q2> COMPUTED EVERY PT2S AS
SELECT ?foi ?value1 ?mu1 ?value2 ?mu2
FROM NAMED WINDOW <w1> ON <http://example.org/ox1> [RANGE PT1S STEP PT1S]
FROM NAMED WINDOW <w2> ON <http://example.org/ox2> [RANGE PT1S STEP PT1S]
WHERE {
    ?sensor1 a :OxygenSensor1 ;
        sosa:hasFeatureOfInterest ?foi ;
        rspu:measurementUncertainty ?mu1 .
    ?sensor2 a :OxygenSensor2 ;
        sosa:hasFeatureOfInterest ?foi .

    WINDOW <w1> {
        GRAPH ?g1 {
            ?o1 sosa:hasSimpleResult ?value1 ;
                sosa:madeBySensor ?sensor1;
                sosa:observedProperty ?property1 .
        }
    }
    WINDOW <w2> {
        GRAPH ?g2 {
            ?o2 sosa:hasSimpleResult ?value2 ;
                sosa:madeBySensor ?sensor2 ;
                sosa:observedProperty ?property1 .
            << ?o2 sosa:hasSimpleResult ?value2 >> rspu:measurementUncertainty ?mu2 .
        }
    }

    # The reported values should be within 1% from each other
    FILTER(abs(?value1 - ?value2) < 0.001)

    # Find the probability that the distance between the two observed values is greater than 0.10.
    # P(X > Y) > 0.40 and P(X < Y) > 0.40
    FILTER(rspu:greaterThan(rspu:add(?mu1, ?value1), rspu:add(?mu2, ?value2)) > 0.4)
    FILTER(rspu:lessThan(rspu:add(?mu1, ?value1), rspu:add(?mu2, ?value2)) > 0.4 )
}